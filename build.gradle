buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.22.0"
		classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
	}
}

plugins {
	id "java"
	id "com.google.cloud.tools.jib" version "3.2.0"
}

sourceCompatibility = "17"
targetCompatibility = "17"
version = "0.0.1"

repositories {
	mavenCentral()


	maven {
		url "https://packages.confluent.io/maven"
	}
}

apply plugin: "com.commercehub.gradle.plugin.avro"
apply plugin: "com.github.johnrengelman.shadow"

dependencies {
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.6.5'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.6.5'
	implementation "org.apache.avro:avro:1.11.0"
	implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.8.8'
	implementation "org.apache.kafka:kafka-streams:3.1.0"
	implementation "io.confluent:kafka-streams-avro-serde:7.1.0"
	testImplementation "org.apache.kafka:kafka-streams-test-utils:3.1.0"
	testImplementation "junit:junit:4.13.2"
	implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.0'

}

test {
	testLogging {
		outputs.upToDateWhen { false }
		showStandardStreams = true
		exceptionFormat = "full"
	}
}

jar {
	manifest {
		attributes(
				"Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
				"Main-Class": "io.confluent.developer.SplitStream"
		)
	}
}

shadowJar {
	archiveBaseName = "kstreams-split-standalone"
	archiveClassifier = ""
}